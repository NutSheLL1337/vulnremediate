--- dvwa-src/vulnerabilities/brute/source/low.php	2025-10-02 13:39:10.770602725 +0300
+++ fixes/dvwa/vulnerabilities/brute/source/low.php	2025-10-02 14:01:23.070679366 +0300
@@ -1,38 +1,24 @@
 <?php
-// ... (контекстно-залишити інші частини файлу як є — тут вставлено лише фрагмент щоб уникнути помилок)
-// (нині в demo ми замінюємо 1 рядок SQL на prepared statement)
-	// Autogenerated demo fix: use prepared statement to avoid SQL injection.
-	// REVIEW: ensure $mysqli/$conn variable is correct for this file.
-	$dbConn = isset($mysqli) ? $mysqli : (isset($conn) ? $conn : (isset($link) ? $link : null));
-	if ($dbConn) {
-// Autogenerated demo fix: use prepared statement to avoid SQL injection.
-// REVIEW: ensure $mysqli/$conn variable is correct for this file.
-$dbConn = isset($mysqli) ? $mysqli : (isset($conn) ? $conn : (isset($link) ? $link : null));
-if ($dbConn) {
-    $sql_tpl = "SELECT * FROM `users` WHERE user = ? AND password = ?";
-    $stmt = @mysqli_prepare($dbConn, $sql_tpl);
-    if ($stmt) {
-        mysqli_stmt_bind_param($stmt, "ss", $user, $pass);
-        mysqli_stmt_execute($stmt);
-        $res = mysqli_stmt_get_result($stmt);
-        // fetch rows as needed
-    } else {
-        $query  = "SELECT * FROM `users` WHERE user = '$user' AND password = '$pass';";
-    }
-} else {
-    $query  = "SELECT * FROM `users` WHERE user = '$user' AND password = '$pass';";
-}
-	    $stmt = @mysqli_prepare($dbConn, $sql_tpl);
-	    if ($stmt) {
-	        mysqli_stmt_bind_param($stmt, "ss", $user, $pass);
-	        mysqli_stmt_execute($stmt);
-	        $res = mysqli_stmt_get_result($stmt);
-	        // fetch rows as needed
-	    } else {
-	        // fallback to original query if prepare failed
-	        $query  = "SELECT * FROM `users` WHERE user = '$user' AND password = '$pass';";
-	    }
-	} else {
-	    // no DB connection variable found — keep original behavior
-	    $query  = "SELECT * FROM `users` WHERE user = '$user' AND password = '$pass';";
-	}
+// --- Demo: prepared-statement remediation for low.php (PoC) ---
+// (Insert this block at the location of the original vulnerable SQL concatenation)
+ // Autogenerated demo fix: use prepared statement to avoid SQL injection.
+ // REVIEW: ensure $mysqli/$conn variable is correct for this file.
+ $dbConn = isset($mysqli) ? $mysqli : (isset($conn) ? $conn : (isset($link) ? $link : null));
+ if ($dbConn) {
+     $sql_tpl = "SELECT * FROM `users` WHERE user = ? AND password = ?";
+     $stmt = @mysqli_prepare($dbConn, $sql_tpl);
+     if ($stmt) {
+         // bind parameters (two strings). Adjust types if necessary (e.g., "is")
+         mysqli_stmt_bind_param($stmt, "ss", $user, $pass);
+         mysqli_stmt_execute($stmt);
+         $res = mysqli_stmt_get_result($stmt);
+         // Fetch rows as needed, e.g.:
+         // $row = mysqli_fetch_assoc($res);
+     } else {
+         // Fallback to original query if prepare failed (keeps behavior unchanged)
+         $query  = "SELECT * FROM `users` WHERE user = '$user' AND password = '$pass';";
+     }
+ } else {
+     // No DB connection variable found — keep original behavior
+     $query  = "SELECT * FROM `users` WHERE user = '$user' AND password = '$pass';";
+ }
