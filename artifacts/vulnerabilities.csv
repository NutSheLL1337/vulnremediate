tool,rule_id,message,level,file,start_line,cwe
Semgrep OSS,javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection,"Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements.",info,/home/vboxuser/Diplomas/juice-shop-src/data/static/codefixes/dbSchemaChallenge_1.ts,5,CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
Semgrep OSS,javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection,"Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements.",info,/home/vboxuser/Diplomas/juice-shop-src/data/static/codefixes/dbSchemaChallenge_3.ts,11,CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
Semgrep OSS,javascript.audit.detect-replaceall-sanitization.detect-replaceall-sanitization,"Detected a call to `replaceAll()` in an attempt to HTML escape the string `tableData[i].description`. Manually sanitizing input through a manually built list can be circumvented in many situations, and it's better to use a well known sanitization library such as `sanitize-html` or `DOMPurify`.",info,/home/vboxuser/Diplomas/juice-shop-src/data/static/codefixes/restfulXssChallenge_2.ts,62,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
Semgrep OSS,javascript.audit.detect-replaceall-sanitization.detect-replaceall-sanitization,"Detected a call to `replaceAll()` in an attempt to HTML escape the string `tableData[i].description.replaceAll('<', '&lt;')`. Manually sanitizing input through a manually built list can be circumvented in many situations, and it's better to use a well known sanitization library such as `sanitize-html` or `DOMPurify`.",info,/home/vboxuser/Diplomas/juice-shop-src/data/static/codefixes/restfulXssChallenge_2.ts,62,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
Semgrep OSS,javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection,"Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements.",info,/home/vboxuser/Diplomas/juice-shop-src/data/static/codefixes/unionSqlInjectionChallenge_1.ts,6,CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
Semgrep OSS,javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection,"Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements.",info,/home/vboxuser/Diplomas/juice-shop-src/data/static/codefixes/unionSqlInjectionChallenge_3.ts,10,CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
Semgrep OSS,generic.secrets.security.detected-generic-secret.detected-generic-secret,Generic Secret detected,info,/home/vboxuser/Diplomas/juice-shop-src/data/static/users.yml,150,CWE-798: Use of Hard-coded Credentials
Semgrep OSS,generic.secrets.security.detected-jwt-token.detected-jwt-token,JWT token detected,info,/home/vboxuser/Diplomas/juice-shop-src/frontend/src/app/app.guard.spec.ts,38,CWE-321: Use of Hard-coded Cryptographic Key
Semgrep OSS,generic.secrets.security.detected-jwt-token.detected-jwt-token,JWT token detected,info,/home/vboxuser/Diplomas/juice-shop-src/frontend/src/app/last-login-ip/last-login-ip.component.spec.ts,61,CWE-321: Use of Hard-coded Cryptographic Key
Semgrep OSS,generic.secrets.security.detected-jwt-token.detected-jwt-token,JWT token detected,info,/home/vboxuser/Diplomas/juice-shop-src/frontend/src/app/last-login-ip/last-login-ip.component.spec.ts,67,CWE-321: Use of Hard-coded Cryptographic Key
Semgrep OSS,javascript.browser.security.insecure-document-method.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",info,/home/vboxuser/Diplomas/juice-shop-src/frontend/src/assets/private/dat.gui.min.js,1,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
Semgrep OSS,javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp,"RegExp() called with a `d` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",info,/home/vboxuser/Diplomas/juice-shop-src/frontend/src/assets/private/dat.gui.min.js,11,CWE-1333: Inefficient Regular Expression Complexity
Semgrep OSS,javascript.browser.security.insecure-document-method.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",info,/home/vboxuser/Diplomas/juice-shop-src/frontend/src/assets/private/dat.gui.min.js,13,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
Semgrep OSS,javascript.browser.security.insecure-document-method.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",info,/home/vboxuser/Diplomas/juice-shop-src/frontend/src/assets/private/dat.gui.min.js,23,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
Semgrep OSS,javascript.browser.security.insecure-document-method.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",info,/home/vboxuser/Diplomas/juice-shop-src/frontend/src/assets/private/dat.gui.min.js,33,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
Semgrep OSS,javascript.browser.security.insecure-document-method.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",info,/home/vboxuser/Diplomas/juice-shop-src/frontend/src/assets/private/dat.gui.min.js,35,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
Semgrep OSS,javascript.browser.security.insecure-document-method.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",info,/home/vboxuser/Diplomas/juice-shop-src/frontend/src/assets/private/dat.gui.min.js,40,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
Semgrep OSS,javascript.browser.security.insecure-document-method.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",info,/home/vboxuser/Diplomas/juice-shop-src/frontend/src/assets/private/dat.gui.min.js,41,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
Semgrep OSS,javascript.browser.security.insecure-document-method.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",info,/home/vboxuser/Diplomas/juice-shop-src/frontend/src/assets/private/dat.gui.min.js,44,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
Semgrep OSS,javascript.browser.security.insecure-document-method.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",info,/home/vboxuser/Diplomas/juice-shop-src/frontend/src/assets/private/dat.gui.min.js,44,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
Semgrep OSS,javascript.browser.security.insecure-document-method.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",info,/home/vboxuser/Diplomas/juice-shop-src/frontend/src/assets/private/dat.gui.min.js,48,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
Semgrep OSS,javascript.browser.security.insecure-document-method.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",info,/home/vboxuser/Diplomas/juice-shop-src/frontend/src/assets/private/dat.gui.min.js,48,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
Semgrep OSS,javascript.browser.security.insecure-document-method.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",info,/home/vboxuser/Diplomas/juice-shop-src/frontend/src/assets/private/dat.gui.min.js,49,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
Semgrep OSS,javascript.browser.security.insecure-document-method.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",info,/home/vboxuser/Diplomas/juice-shop-src/frontend/src/assets/private/three.js,11375,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
Semgrep OSS,javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop,"Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.",info,/home/vboxuser/Diplomas/juice-shop-src/frontend/src/hacking-instructor/helpers/helpers.ts,38,CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes
Semgrep OSS,javascript.browser.security.insecure-document-method.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",info,/home/vboxuser/Diplomas/juice-shop-src/frontend/src/hacking-instructor/index.ts,122,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
Semgrep OSS,html.security.audit.missing-integrity.missing-integrity,"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",info,/home/vboxuser/Diplomas/juice-shop-src/frontend/src/index.html,14,CWE-353: Missing Support for Integrity Check
Semgrep OSS,html.security.audit.missing-integrity.missing-integrity,"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",info,/home/vboxuser/Diplomas/juice-shop-src/frontend/src/index.html,15,CWE-353: Missing Support for Integrity Check
Semgrep OSS,html.security.audit.missing-integrity.missing-integrity,"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",info,/home/vboxuser/Diplomas/juice-shop-src/frontend/src/index.html,16,CWE-353: Missing Support for Integrity Check
Semgrep OSS,javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp,"RegExp() called with a `challengeKey` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",info,/home/vboxuser/Diplomas/juice-shop-src/lib/codingChallenges.ts,76,CWE-1333: Inefficient Regular Expression Complexity
Semgrep OSS,javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp,"RegExp() called with a `challengeKey` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",info,/home/vboxuser/Diplomas/juice-shop-src/lib/codingChallenges.ts,78,CWE-1333: Inefficient Regular Expression Complexity
Semgrep OSS,javascript.lang.security.audit.hardcoded-hmac-key.hardcoded-hmac-key,Detected a hardcoded hmac key. Avoid hardcoding secrets and consider using an alternate option such as reading the secret from a config file or using an environment variable.,info,/home/vboxuser/Diplomas/juice-shop-src/lib/insecurity.ts,44,CWE-798: Use of Hard-coded Credentials
Semgrep OSS,javascript.jsonwebtoken.security.jwt-hardcode.hardcoded-jwt-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module).",info,/home/vboxuser/Diplomas/juice-shop-src/lib/insecurity.ts,56,CWE-798: Use of Hard-coded Credentials
Semgrep OSS,javascript.lang.security.audit.hardcoded-hmac-key.hardcoded-hmac-key,Detected a hardcoded hmac key. Avoid hardcoding secrets and consider using an alternate option such as reading the secret from a config file or using an environment variable.,info,/home/vboxuser/Diplomas/juice-shop-src/lib/insecurity.ts,152,CWE-798: Use of Hard-coded Credentials
Semgrep OSS,javascript.express.security.audit.express-detect-notevil-usage.express-detect-notevil-usage,"Detected usage of the `notevil` package, which is unmaintained and has vulnerabilities. Using any sort of `eval()` functionality can be very dangerous, but if you must, the `eval` package is an up to date alternative. Be sure that only trusted input reaches an `eval()` function.",info,/home/vboxuser/Diplomas/juice-shop-src/routes/b2bOrder.ts,23,CWE-1104: Use of Unmaintained Third Party Components
Semgrep OSS,javascript.browser.security.eval-detected.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",info,/home/vboxuser/Diplomas/juice-shop-src/routes/captcha.ts,23,CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')
Semgrep OSS,javascript.express.security.injection.raw-html-format.raw-html-format,User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.,info,/home/vboxuser/Diplomas/juice-shop-src/routes/chatbot.ts,197,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
Semgrep OSS,javascript.express.security.audit.express-res-sendfile.express-res-sendfile,"The application processes user-input, this is passed to res.sendFile which can allow an attacker to arbitrarily read files on the system through path traversal. It is recommended to perform input validation in addition to canonicalizing the path. This allows you to validate the path against the intended directory it should be accessing.",info,/home/vboxuser/Diplomas/juice-shop-src/routes/fileServer.ts,33,CWE-73: External Control of File Name or Path
Semgrep OSS,javascript.express.security.audit.express-libxml-vm-noent.express-libxml-vm-noent,Detected use of parseXml() function with the `noent` field set to `true`. This can lead to an XML External Entities (XXE) attack if untrusted data is passed into it.,info,/home/vboxuser/Diplomas/juice-shop-src/routes/fileUpload.ts,83,CWE-611: Improper Restriction of XML External Entity Reference
Semgrep OSS,javascript.express.security.audit.express-res-sendfile.express-res-sendfile,"The application processes user-input, this is passed to res.sendFile which can allow an attacker to arbitrarily read files on the system through path traversal. It is recommended to perform input validation in addition to canonicalizing the path. This allows you to validate the path against the intended directory it should be accessing.",info,/home/vboxuser/Diplomas/juice-shop-src/routes/keyServer.ts,14,CWE-73: External Control of File Name or Path
Semgrep OSS,javascript.express.security.audit.express-res-sendfile.express-res-sendfile,"The application processes user-input, this is passed to res.sendFile which can allow an attacker to arbitrarily read files on the system through path traversal. It is recommended to perform input validation in addition to canonicalizing the path. This allows you to validate the path against the intended directory it should be accessing.",info,/home/vboxuser/Diplomas/juice-shop-src/routes/logfileServer.ts,14,CWE-73: External Control of File Name or Path
Semgrep OSS,javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection,"Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements.",info,/home/vboxuser/Diplomas/juice-shop-src/routes/login.ts,34,CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
Semgrep OSS,javascript.express.security.audit.express-res-sendfile.express-res-sendfile,"The application processes user-input, this is passed to res.sendFile which can allow an attacker to arbitrarily read files on the system through path traversal. It is recommended to perform input validation in addition to canonicalizing the path. This allows you to validate the path against the intended directory it should be accessing.",info,/home/vboxuser/Diplomas/juice-shop-src/routes/quarantineServer.ts,14,CWE-73: External Control of File Name or Path
Semgrep OSS,javascript.express.security.audit.express-open-redirect.express-open-redirect,"The application redirects to a URL specified by user-supplied input `query` that is not validated. This could redirect users to malicious locations. Consider using an allow-list approach to validate URLs, or warn users they are being redirected to a third-party website.",info,/home/vboxuser/Diplomas/juice-shop-src/routes/redirect.ts,19,CWE-601: URL Redirection to Untrusted Site ('Open Redirect')
Semgrep OSS,javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection,"Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements.",info,/home/vboxuser/Diplomas/juice-shop-src/routes/search.ts,23,CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
Semgrep OSS,javascript.browser.security.eval-detected.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",info,/home/vboxuser/Diplomas/juice-shop-src/routes/userProfile.ts,62,CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')
Semgrep OSS,javascript.lang.security.audit.code-string-concat.code-string-concat,Found data from an Express or Next web request flowing to `eval`. If this data is user-controllable this can lead to execution of arbitrary system commands in the context of your application process. Avoid `eval` whenever possible.,info,/home/vboxuser/Diplomas/juice-shop-src/routes/userProfile.ts,62,CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')
Semgrep OSS,javascript.lang.security.audit.unknown-value-with-script-tag.unknown-value-with-script-tag,"Cannot determine what 'subs' is and it is used with a '<script>' tag. This could be susceptible to cross-site scripting (XSS). Ensure 'subs' is not externally controlled, or sanitize this data.",info,/home/vboxuser/Diplomas/juice-shop-src/routes/videoHandler.ts,58,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
Semgrep OSS,javascript.lang.security.audit.unknown-value-with-script-tag.unknown-value-with-script-tag,"Cannot determine what 'subs' is and it is used with a '<script>' tag. This could be susceptible to cross-site scripting (XSS). Ensure 'subs' is not externally controlled, or sanitize this data.",info,/home/vboxuser/Diplomas/juice-shop-src/routes/videoHandler.ts,71,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
Semgrep OSS,javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.",info,/home/vboxuser/Diplomas/juice-shop-src/server.ts,155,CWE-134: Use of Externally-Controlled Format String
Semgrep OSS,javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing,"Directory listing/indexing is enabled, which may lead to disclosure of sensitive directories and files. It is recommended to disable directory listing unless it is a public resource. If you need directory listing, ensure that sensitive files are inaccessible when querying the resource.",info,/home/vboxuser/Diplomas/juice-shop-src/server.ts,269,CWE-548: Exposure of Information Through Directory Listing
Semgrep OSS,javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing,"Directory listing/indexing is enabled, which may lead to disclosure of sensitive directories and files. It is recommended to disable directory listing unless it is a public resource. If you need directory listing, ensure that sensitive files are inaccessible when querying the resource.",info,/home/vboxuser/Diplomas/juice-shop-src/server.ts,273,CWE-548: Exposure of Information Through Directory Listing
Semgrep OSS,javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing,"Directory listing/indexing is enabled, which may lead to disclosure of sensitive directories and files. It is recommended to disable directory listing unless it is a public resource. If you need directory listing, ensure that sensitive files are inaccessible when querying the resource.",info,/home/vboxuser/Diplomas/juice-shop-src/server.ts,277,CWE-548: Exposure of Information Through Directory Listing
Semgrep OSS,javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing,"Directory listing/indexing is enabled, which may lead to disclosure of sensitive directories and files. It is recommended to disable directory listing unless it is a public resource. If you need directory listing, ensure that sensitive files are inaccessible when querying the resource.",info,/home/vboxuser/Diplomas/juice-shop-src/server.ts,281,CWE-548: Exposure of Information Through Directory Listing
Semgrep OSS,javascript.jsonwebtoken.security.jwt-hardcode.hardcoded-jwt-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module).",info,/home/vboxuser/Diplomas/juice-shop-src/test/api/2faSpec.ts,154,CWE-798: Use of Hard-coded Credentials
Semgrep OSS,generic.secrets.security.detected-generic-secret.detected-generic-secret,Generic Secret detected,info,/home/vboxuser/Diplomas/juice-shop-src/test/api/2faSpec.ts,175,CWE-798: Use of Hard-coded Credentials
Semgrep OSS,generic.secrets.security.detected-generic-secret.detected-generic-secret,Generic Secret detected,info,/home/vboxuser/Diplomas/juice-shop-src/test/api/2faSpec.ts,370,CWE-798: Use of Hard-coded Credentials
Semgrep OSS,generic.secrets.security.detected-jwt-token.detected-jwt-token,JWT token detected,info,/home/vboxuser/Diplomas/juice-shop-src/test/api/userApiSpec.ts,302,CWE-321: Use of Hard-coded Cryptographic Key
Semgrep OSS,javascript.browser.security.eval-detected.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",info,/home/vboxuser/Diplomas/juice-shop-src/test/cypress/e2e/contact.spec.ts,258,CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')
Semgrep OSS,generic.secrets.security.detected-jwt-token.detected-jwt-token,JWT token detected,info,/home/vboxuser/Diplomas/juice-shop-src/test/cypress/e2e/forgedJwt.spec.ts,7,CWE-321: Use of Hard-coded Cryptographic Key
Semgrep OSS,generic.secrets.security.detected-jwt-token.detected-jwt-token,JWT token detected,info,/home/vboxuser/Diplomas/juice-shop-src/test/cypress/e2e/forgedJwt.spec.ts,22,CWE-321: Use of Hard-coded Cryptographic Key
Semgrep OSS,generic.secrets.security.detected-generic-secret.detected-generic-secret,Generic Secret detected,info,/home/vboxuser/Diplomas/juice-shop-src/test/cypress/e2e/totpSetup.spec.ts,7,CWE-798: Use of Hard-coded Credentials
Semgrep OSS,generic.secrets.security.detected-jwt-token.detected-jwt-token,JWT token detected,info,/home/vboxuser/Diplomas/juice-shop-src/test/server/currentUserSpec.ts,33,CWE-321: Use of Hard-coded Cryptographic Key
Semgrep OSS,generic.secrets.security.detected-jwt-token.detected-jwt-token,JWT token detected,info,/home/vboxuser/Diplomas/juice-shop-src/test/server/currentUserSpec.ts,36,CWE-321: Use of Hard-coded Cryptographic Key
Semgrep OSS,generic.secrets.security.detected-jwt-token.detected-jwt-token,JWT token detected,info,/home/vboxuser/Diplomas/juice-shop-src/test/server/verifySpec.ts,263,CWE-321: Use of Hard-coded Cryptographic Key
Semgrep OSS,generic.secrets.security.detected-jwt-token.detected-jwt-token,JWT token detected,info,/home/vboxuser/Diplomas/juice-shop-src/test/server/verifySpec.ts,275,CWE-321: Use of Hard-coded Cryptographic Key
Semgrep OSS,generic.secrets.security.detected-jwt-token.detected-jwt-token,JWT token detected,info,/home/vboxuser/Diplomas/juice-shop-src/test/server/verifySpec.ts,297,CWE-321: Use of Hard-coded Cryptographic Key
Semgrep OSS,generic.secrets.security.detected-jwt-token.detected-jwt-token,JWT token detected,info,/home/vboxuser/Diplomas/juice-shop-src/test/server/verifySpec.ts,309,CWE-321: Use of Hard-coded Cryptographic Key
Semgrep OSS,dockerfile.security.missing-user.missing-user,"By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.",info,/home/vboxuser/Diplomas/juice-shop-src/test/smoke/Dockerfile,7,CWE-250: Execution with Unnecessary Privileges
Semgrep OSS,javascript.express.security.audit.xss.pug.explicit-unescape.template-explicit-unescape,"Detected an explicit unescape in a Pug template, using either '!=' or '!{...}'. If external data can reach these locations, your application is exposed to a cross-site scripting (XSS) vulnerability. If you must do this, ensure no external data can reach this location.",info,/home/vboxuser/Diplomas/juice-shop-src/views/promotionVideo.pug,79,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
